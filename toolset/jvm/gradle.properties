# Configure the Grade Daemon - memory and same encoding on all machines
org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError

## activate Gradle configuration cache - instantly start builds that ran before, full parallelism
#org.gradle.configuration-cache=true
org.gradle.configuration-cache.problems=fail
org.gradle.configuration-cache.max-problems=0

# activate Gradle build cache - switch between branches/commits without rebuilding every time
org.gradle.caching=true
org.gradle.parallel=true

# see issue with intellij here: https://youtrack.jetbrains.com/issue/IDEA-262702/Grade-reload-fails-with-enabled-Gradle-parallelism -> trying with 2023.3.Beta to see if issues resolve
gradle.tooling.models.parallel.fetch=true

# show the individual deprecation warnings and determine if they come from our own scripts or plugins
org.gradle.warning.mode=all

# Gives us explicit control of exactly where we can use the kotlin std-lib library,
# rather than implicit assumption of it being used everywhere
#kotlin.stdlib.default.dependency=false

# uncomment to use the k2 compiler
#kotlin.experimental.tryK2=true
#kapt.use.k2=true